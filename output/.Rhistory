ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server))
library(shiny)
citation('shiny')
data = read.table("~/Desktop/NMOUNDS.csv", header=T, sep=",")
View(data)
head(data)
ncol(data)
plot(-100,-100, xlim=c(1980,2020), ylim=c(0,100), xlab="year", ylab="population size")
colorlist = c("goldenrod3", "darkorange2", "brown3", "darkorchid3", "dodgerblue3", "chartreuse3", "cyan3", "deeppink3")
plot(-100,-100, xlim=c(1980,2020), ylim=c(0,100), xlab="year", ylab="population size")
for(c in 3:ncol(data)){
lines(x=data$YEAR, y=data[,c], col=colorlist[c])
}
plot(-100,-100, xlim=c(1980,2020), ylim=c(0,130), xlab="year", ylab="population size")
for(c in 3:ncol(data)){
lines(x=data$YEAR, y=data[,c], col=colorlist[c])
}
plot(-100,-100, xlim=c(1980,2020), ylim=c(0,130), xlab="year", ylab="population size")
for(c in 3:ncol(data)){
lines(x=data$YEAR, y=data[,c], col=colorlist[c], lwd=1.5)
}
plot(-100,-100, xlim=c(1990,2020), ylim=c(0,130), xlab="year", ylab="population size")
for(c in 3:ncol(data)){
lines(x=data$YEAR, y=data[,c], col=colorlist[c], lwd=1.5)
}
install.packages(c("xcode-select", "--install"))
install.packages("data.table")
d6 = sample(seq(1,6,1), 100, replace=T) + sample(seq(1,6,1), 100, replace=T)
d12 = sample(seq(1,12,1), 100, replace=T)
hist(d6)
hist(d12)
d6 = sample(seq(1,6,1), 1000, replace=T) + sample(seq(1,6,1), 1000, replace=T)
d12 = sample(seq(1,12,1), 1000, replace=T)
hist(d6, xlim(1,12))
?hist
hist(d6, xlim=c(1,12))
hist(d6, xlim=c(1,12), breaks = seq(1,12,1))
hist(d6, xlim=c(1,12), breaks = seq(1,12,1), main="2d6 sum")
mean(d6)
median(d6)
hist(d6, xlim=c(1,12), breaks = seq(1,12,1), main=paste("2d6 sum, mean = ", mean(d6)))
hist(d6, xlim=c(1,12), breaks = seq(1,12,1), main=paste("2d6 sum, mean = ", mean(d6)))
hist(d12, xlim=c(1,12), breaks = seq(1,12,1), main=paste("2d6 sum, mean = ", mean(d12)))
d6 = sample(seq(1,6,1), 1000, replace=T) + sample(seq(1,6,1), 1000, replace=T)
d12 = sample(seq(1,12,1), 1000, replace=T)
hist(d6,  xlim=c(1,12), breaks = seq(1,12,1), main=paste("2d6 sum, mean = ", mean(d6)))
hist(d12, xlim=c(1,12), breaks = seq(1,12,1), main=paste("2d6 sum, mean = ", mean(d12)))
table(d12)
hist(d6,  xlim=c(0,12), breaks = seq(0,13,1), main=paste("2d6 sum, mean = ", mean(d6)))
hist(d12, xlim=c(0,12), breaks = seq(0,13,1), main=paste("2d6 sum, mean = ", mean(d12)))
hist(d6,  xlim=c(0,12), breaks = seq(0,13,1), main=paste("2d6 sum, mean = ", mean(d6)), ylim=c(0,150))
hist(d6,  xlim=c(0,12), breaks = seq(0,13,1), main=paste("2d6 sum, mean = ", mean(d6)), ylim=c(0,250))
hist(d6,  xlim=c(0,12), breaks = seq(0,13,1), main=paste("2d6 sum, mean = ", mean(d6)), ylim=c(0,200))
hist(d12, xlim=c(0,12), breaks = seq(0,13,1), main=paste("2d6 sum, mean = ", mean(d12)), ylim=c(0,200))
hist(d6,  xlim=c(0,12), breaks = seq(0,13,1), main=paste("2d6 sum, mean = ", mean(d6)), ylim=c(0,200))
hist(d12, xlim=c(0,12), breaks = seq(0,13,1), main=paste("1d12 sum, mean = ", mean(d12)), ylim=c(0,200))
d6 = sample(seq(1,6,1), 1000, replace=T) + sample(seq(1,6,1), 1000, replace=T)
d12 = sample(seq(1,12,1), 1000, replace=T)
hist(d6,  xlim=c(0,12), breaks = seq(0,13,1), main=paste("2d6 sum, mean = ", mean(d6)), ylim=c(0,200))
hist(d12, xlim=c(0,12), breaks = seq(0,13,1), main=paste("1d12 sum, mean = ", mean(d12)), ylim=c(0,200))
d = read.table("~/Desktop/Book1.csv", header=T, sep=",")
table(d)
d = read.table("~/Desktop/Book1.csv", header=T, sep=",")
table(d)
169/3
read.table("/Users/jannawilloughby/GDrive/Willoughby lab/mussel genetic diversity/merge/merge_results_all_data.csv", header=T, sep=",")
data = read.table("/Users/jannawilloughby/GDrive/Willoughby lab/mussel genetic diversity/merge/merge_results_all_data.csv", header=T, sep=",")
head(data)
table(data$phylumName, data$className)
table(data$className, data$familyName)
classes = names(data$className)
classes
classes = names(table(data$className))
classes
out = NULL
out = NULL
for(c in 1:length(classes)){
temp = data[data$className==as.character(classes[c]),]
out = c(out, length(names(table(temp$familyName))))
}
cbind(classes, out)
temp
c
length(names(table(temp$familyName)))
table(temp$familyName)
table(temp$familyName)>0
length(names(table(temp$familyName)>0))
table(temp$familyName)[table(temp$familyName)>0)]
tt   = table(temp$familyName)
tt
tt   = tt[tt>0]
tt
length(tt)
out = NULL
for(c in 1:length(classes)){
temp = data[data$className==as.character(classes[c]),]
tt   = table(temp$familyName)
tt   = tt[tt>0]
out  = c(out, length(tt))
}
cbind(classes, out)
c=1
temp = data[data$className==as.character(classes[c]),]
head(temp)
fams = spp = NULL
for(c in 1:length(classes)){
temp = data[data$className==as.character(classes[c]),]
tt   = table(temp$familyName)
tt   = tt[tt>0]
fams = c(fams, length(tt))
spp  = c(spp, nrow(temp))
}
cbind(classes, fams, spp)
data = read.table("/Users/jannawilloughby/GDrive/Willoughby lab/mussel genetic diversity/merge/merge_results_combined.csv", header=T, sep=",")
head(data)
table(data$phylumName, data$className)
classes = names(table(data$className))
fams = spp = NULL
for(c in 1:length(classes)){
temp = data[data$className==as.character(classes[c]),]
tt   = table(temp$familyName)
tt   = tt[tt>0]
fams = c(fams, length(tt))
spp  = c(spp, nrow(temp))
}
cbind(classes, fams, spp)
install.packages("lme4")
####don't do residulas, do random effect for study for the intercept then move on with life (fixed effects for everything else)
library(lme4)
?length
length(data$t, na.rm=T)
y=1:9
dim(y)=c(3,3)
str(y)
y
?upper.diag
?power.anova.test
?as.logical
NA/1
?matrix
a=3
b=4
a|b
a=0
b=0
a|b
sample(1, 1:20, replace=T)
t=20
sum(sample(t, 1:20, replace=T))
sum(sample(1:20,t, replace=T))
t=15
sum(sample(1:20,t, replace=T))
t=10
sum(sample(1:20,t, replace=T))
t=
sum(sample(1:20,t, replace=T))
t=10
sum(sample(1:20,t, replace=T))
sum(sample(1:20,t, replace=T))
t=11
sum(sample(1:20,t, replace=T))
t=11
sum(sample(1:20,t, replace=T))
t=11
sum(sample(1:20,t, replace=T))
t=10
sum(sample(1:20,t, replace=T))
t=9
sum(sample(1:20,t, replace=T))
t=10
sum(sample(1:20,t, replace=T))
dice = 7
sum(sample(c(1,2,3,4), dice, replace=T)+(dice))
sample(c(1,2,3,4), dice, replace=T)
(dice)
sample(c(1,2,3,4), dice, replace=T)+(dice)
sum(sample(c(1,2,3,4), dice, replace=T))+(dice)
sum(sample(c(1,2,3,4), dice, replace=T))+(dice)
sum(sample(c(1,2,3,4), dice, replace=T))+(dice)
sum(sample(1:4, dice, replace=T))+(dice)
#fireball 8d6
sum(sample(1:8, 6, replace=T))
#fireball 8d6
sum(sample(1:8, 6, replace=T))
#fireball 8d6
sum(sample(1:8, 6, replace=T))
#magic missle (3d4+1 @4th lvl, +1 die per level)
dice = 7
sum(sample(1:4, dice, replace=T))+(dice)
#magic missle (3d4+1 @4th lvl, +1 die per level)
dice = 5
sum(sample(1:4, dice, replace=T))+(dice)
sample(1:20,1) #magic surge
sample(1:20,1) #magic surge
paste(sample(seq(0,100,10),1), sample(1:10,1), sep="")
paste(sample(1:10,1), sample(1:10,1), sep="")
paste(sample(0:9,1), sample(1:9,1), sep="")
sample(1:100,1)
sample(1:100,1)
#magic missle (3d4+1 @4th lvl, +1 die per level)
dice = 7
sum(sample(1:4, dice, replace=T))+(dice)
sample(1:20,1) #magic surge
sample(1:100,1)
#heal
(sample(1:6,1)+1)*2
#heal
(sample(1:6,1)+1)*2
#heal
(sample(1:6,1)+1)*2
#heal
(sample(1:6,1)+1)*2
#heal
sumrep(((sample(1:6,1)+1)*2),2))
#heal
sum(rep(((sample(1:6,1)+1)*2),2))
rep(((sample(1:6,1)+1)*2),2)
sample(1:6,1)+1)*2
sample(1:6,1)+1)*2)
sample(1:6,1)
sample(1:6,1)+1
(sample(1:6,1)+1)*2)
(sample(1:6,1)+1)*2
((sample(1:6,1)+1)*2)
rep(((sample(1:6,1)+1)*2),2)
replicate(((sample(1:6,1)+1)*2),2)
(sample(1:6,1)+1)*2
(sample(1:6,1)+1)*2
?replicate
#heal
sample(1:6,2)+1)*2)
#heal
sample(1:6,2)+1)*2
#heal
(sample(1:6,2)+1)*2
#heal
sum(c((sample(1:6,2)+1)*2))
c((sample(1:6,2)+1)*2)
c((sample(1:6,2)+1)*2)
c((sample(1:6,2)+1)*2)
c((sample(1:6,2)+1)*2)
c((sample(1:6,2)+1)*2)
#heal
npotions = 1
sum(c((sample(1:6,2)+npotions)*2))
sum(c((sample(1:6,2)+npotions)*2))
sum(c((sample(1:6,npotions)+1)*2))
sample(1:8,npotions)
sample(1:8,npotions)
#heal - doubled because of necklace
npotions = 5
sum(sample(1:8,npotions))
sum(sample(1:8,npotions))
sample(1:8,npotions)
#heal - doubled because of necklace
npotions = 5
sum(c((sample(1:6,npotions)+1)*2))
#heal - doubled because of necklace
npotions = 2
sum(c((sample(1:6,npotions)+1)*2))
#fireball 8d6
sum(sample(1:8, 6, replace=T))
sample(1:20,1) #magic surge
sample(1:20,1) #magic surge
sample(1:100,1)
#heal - doubled because of necklace
npotions = 1
sum(c((sample(1:6, replace=T, npotions)+1)*2))
#magic missle (3d4+1 @4th lvl, +1 die per level)
dice = 8
sum(sample(1:4, dice, replace=T))+(dice)
sample(1:20,1) #magic surge
sample(1:100,1)
sum(sample(1:4, dice, replace=T))+(dice)
sample(1:20,1) #magic surge
sample(1:100,1)
sum(c(sample(1:6, dice, replace=T),(dice*1))
)
sum(c(sample(1:6, dice, replace=T),(dice*1)))*2
sum(c(sample(1:6, dice, replace=T),(dice*1)))*2
sample(1:6, dice, replace=T)
#short rest - doubled because of necklace
dice = 1
sum(c(sample(1:6, dice, replace=T),(dice*1)))*2
sum(c(sample(1:6, dice, replace=T),(dice*1)))*2
#short rest - doubled because of necklace
dice = 2
sum(c(sample(1:6, dice, replace=T),(dice*1)))*2
sample(c(1:6), replace=T, n=25)
sample(c(1:6), 25, replace=T)
table(sample(c(1:6), 25, replace=T))
table(sample(c(1:6), 50, replace=T))
sample(c(1:8),1,replace=T)+4
sample(c(1:8),1,replace=T)+4
rep((sample(c(1:8),1,replace=T)+4),5)
sum(rep((sample(c(1:8),1,replace=T)+4),5))
sum(rep((sample(c(1:8),5,replace=T)+5),5))
n=5
sum(rep((sample(c(1:8),n,replace=T)+n),1))
sum(rep((sample(c(1:8),n,replace=T)+n),1))
n=i=null
n=i=NULL
n=i=NULL
while(n<75)(
i = i+1
n = n + sample(c(1:8),n,replace=T)+4
n=i=NULL
while(n<75)(
i = i+1
n = n + sample(c(1:8),1) + 4
n=0
i=NULL
while(n<75)(
i = i+1
n = n + sample(c(1:8),1) + 4
n=0
i=NULL
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
i
n=0
i=0
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
n=0
i=0
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
n=0
i=0
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
n=0
i=0
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
n=0
i=0
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
for(n in 1:1000){
n=0
i=0
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
ii = c(ii,i)}
ii=NULL
for(n in 1:1000){
n=0
i=0
ii=NULL
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
ii = c(ii,i)}
hist(ii)
ii
for(n in 1:1000){
n=0
i=0
ii=NULL
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
ii = c(ii,i)
}
ii
ii
for(nn in 1:1000){
n=0
i=0
ii=NULL
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
ii = c(ii,i)
}
i
ii
ii=NULL
ii=NULL
for(nn in 1:1000){
n=0
i=0
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
ii = c(ii,i)
}
hist(ii)
for(nn in 1:10000){
n=0
i=0
while(n<75){
i = i+1
n = n + sample(c(1:8),1) + 4
}
ii = c(ii,i)
}
hist(ii)
hist(ii, main="number of roles to get >75")
hist(ii, main="number of roles to get >75", xlab="number of roles")
#chatbook
hitpoints = 75
?
map
library(maps)
library(dplyr)
library(geosphere)
library(scales)
?map
citation('maps')
install.packages("metafor")
?escala
library(metafor)
?escala
?escalc
exp(0.35)
exp(-1.86)
exp(1.86)
setwd("/Users/jannawilloughby/Google Drive/My Drive/loot/Bookclub/bookclub_ratings/output/")
library(googlesheets4)
library(gargle)
library(scales)
library(lme4)
gs4_deauth()
data = read_sheet("https://docs.google.com/spreadsheets/d/1oBncOH7I_-keah3mvgpzcTlXhP95vR2SRa6gBlWSd2Y/edit?resourcekey#gid=216442974")
data = as.data.frame(data)
colnames(data) = c("date", "book", "rating", "reader")
meta = read_sheet("https://docs.google.com/spreadsheets/d/1icRZXs63DR6EpW29qzdWFn87jUF0HkJeY-ABaxIX9tQ/edit#gid=0")
meta = as.data.frame(meta)
colnames(meta) = c("book", "short", "reader", "month", "year", "author", "gender")
books = unique(data$book)
readers = sort(unique(data$reader))
colors=c("darkorange1", "firebrick3", "chartreuse3", "dodgerblue3","darkorchid3")
head(data)
library(googlesheets4)
library(gargle)
library(scales)
library(lme4)
setwd("/Users/jannawilloughby/Google Drive/My Drive/loot/Bookclub/bookclub_ratings/output/")
####setup####
#requires tidyverse install and google sheets integration api, or public sheet
gs4_deauth()
data = read_sheet("https://docs.google.com/spreadsheets/d/1oBncOH7I_-keah3mvgpzcTlXhP95vR2SRa6gBlWSd2Y/edit?resourcekey#gid=216442974")
data = as.data.frame(data)
colnames(data) = c("date", "book", "rating", "reader")
meta = read_sheet("https://docs.google.com/spreadsheets/d/1icRZXs63DR6EpW29qzdWFn87jUF0HkJeY-ABaxIX9tQ/edit#gid=0")
meta = as.data.frame(meta)
colnames(meta) = c("book", "short", "reader", "month", "year", "author", "gender")
books = unique(data$book)
readers = sort(unique(data$reader))
colors=c("darkorange1", "firebrick3", "chartreuse3", "dodgerblue3","darkorchid3")
#remove duplicated ratings
newlist = NULL
for(i in 1:length(readers)){
temp    = data[data$reader==readers[i],,drop=F]
revbook = unique(temp$book)
for(tt in 1:length(revbook)){
x = temp[temp$book==as.character(revbook[tt]),,drop=F]
if(nrow(x)==1){
trow = x
}else{
trow = x[x$date==max(x$date),,drop=F]
}
newlist = rbind(newlist, trow)
}
}
data = as.data.frame(newlist)
#calculate median rating for each book
ratings = data.frame(books = books, short = rep(NA, length(books)), median = rep(NA, length(books)),mean = rep(NA, length(books)), min = rep(NA, length(books)), max = rep(NA, length(books)))
for(b in 1:length(books)){
temp = data[data$book==as.character(books[b]),,drop=F]
ratings$median[b] = median(temp$rating, na.rm=T)
ratings$mean[b]   = mean(temp$rating, na.rm=T)
ratings$min[b]    = min(temp$rating, na.rm=T)
ratings$max[b]    = max(temp$rating, na.rm=T)
ratings$short[b]  = meta$short[meta$book==books[b]]
}
ratings$seq=seq(1,nrow(ratings),1)
head(data)
tail(data)
data=as.data.frame(data)
dim(data)
table(data[,6])
table(data[,6],data[,4])
table(data[,5],data[,4])
head(data)
head(meta)
table(meta$reader)
